Index: src/services/uploader/service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import FormData from \"form-data\";\nimport Api from \"../../common/twakeapi\";\nimport {FILE_SIZE, PreprocessResponse, UploadedFile, UploadResponse} from \"./types\";\nimport {createReadStream, Stats, statSync} from \"fs\";\n\n\nexport default class UploadService {\n\n    constructor(protected api: Api) {\n    }\n\n    async uploadFile(file: UploadedFile): Promise<UploadResponse> {\n        const workspace_id = file.fields.workspace_id.value\n\n        const res: PreprocessResponse = await this.api.post(\n            '/ajax/driveupload/preprocess', {\n                workspace_id: workspace_id,\n                name: file.filename,\n                extension: file.filename.split('.').reverse().shift(),\n            })\n\n        // console.log(\"GOT RESP: \" + Object.entries(res))\n        // console.log(\"PATH: \" + file.filepath)\n        file.upload_id = res.identifier\n        const form = this.buildFormData(file)\n\n        let resp: any;\n        try {\n            resp = (await this.api.post(\n                '/ajax/driveupload/upload',\n                form,\n                form.getHeaders()\n            ))\n\n        } catch (e) {\n            console.error(e)\n        }\n        const upload: UploadResponse = resp.data.object\n\n        return upload\n    }\n\n\n    private buildFormData(file: UploadedFile): FormData {\n        const form = new FormData()\n        const stats: Stats = statSync(file.filepath)\n\n        form.append(\"resumableChunkNumber\", 1)\n        form.append(\"resumableChunkSize\", FILE_SIZE)\n        form.append(\"resumableTotalSize\", stats.size)\n        form.append(\"resumableCurrentChunkSize\", stats.size)\n        form.append(\"resumableType\", file.mimetype || 'application/octet-stream')\n        form.append(\"resumableIdentifier\", file.upload_id)\n        form.append(\"resumableFilename\", file.filename)\n        form.append(\"resumableRelativePath\", file.filename)\n        form.append(\"resumableTotalChunks\", 1)\n        form.append(\"object\", JSON.stringify({\n            id: null,\n            front_id: null,\n            is_directory: false,\n            name: file.filename,\n            parent_id: null,\n            workspace_id: file.fields.workspace_id.value,\n            detached: true,\n        }))\n        form.append(\"file\", createReadStream(file.filepath),\n            {\n                filename: file.filename,\n            })\n\n        return form;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/uploader/service.ts b/src/services/uploader/service.ts
--- a/src/services/uploader/service.ts	
+++ b/src/services/uploader/service.ts	
@@ -25,6 +25,7 @@
         const form = this.buildFormData(file)
 
         let resp: any;
+<<<<<<< HEAD
         try {
             resp = (await this.api.post(
                 '/ajax/driveupload/upload',
@@ -36,6 +37,19 @@
             console.error(e)
         }
         const upload: UploadResponse = resp.data.object
+=======
+        resp = await this.api.post(
+            '/ajax/driveupload/upload', 
+            form,
+            form.getHeaders()
+        )
+        const f = resp.data.object
+        const upload: UploadResponse = f
+        upload.preview = f.has_preview ? f.preview_link : null
+        upload.download = '/ajax/drive/download?workspace_id=' +
+                          `${f.workspace_id}&element_id=${f.id}` +
+                          '&download=1'
+>>>>>>> origin/main
 
         return upload
     }
Index: src/services/users/types.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export declare namespace UsersTypes {\n    export interface UsersSearchRequest {\n        \"company_id\": string\n        \"name\": string\n    }\n\n    export interface CurrentUserRequest {\n        \"timezoneoffset\": number\n    }\n\n    export interface UsersGetRequest {\n        \"id\": number[]\n    }\n\n    export interface User {\n        id: string\n        username: string\n        firstname: string\n        lastname: string\n        thumbnail: string\n        companies?: any[]\n        timeZoneOffset?: number\n        status?: { \"icon\": string, \"title\": string },\n        notification_rooms?: string[]\n    }\n\n    export interface UpdateProfileRequest {\n        language: string,\n        firstname: string,\n        lastname: string,\n        password: { \"old\": string, \"new\": string }\n    }\n\n    export interface UploadProfileResponse {\n        file: string\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/users/types.ts b/src/services/users/types.ts
--- a/src/services/users/types.ts	
+++ b/src/services/users/types.ts	
@@ -18,6 +18,7 @@
         firstname: string
         lastname: string
         thumbnail: string
+        console_id?: string
         companies?: any[]
         timeZoneOffset?: number
         status?: { "icon": string, "title": string },
@@ -34,4 +35,4 @@
     export interface UploadProfileResponse {
         file: string
     }
-}
\ No newline at end of file
+}
